<?xml version="1.0" encoding="UTF-8"?>
<project default="full_win_x64" name="APPGateWayConfigGenerator"><!--project name-->
	<property name="package.name" value="APPGateWay"/>
	<property name="war.name" value="APPGateWay.war"/>
	<property name="app.name" value="APPGateWay"/>
	<property name="src.dir" value="src"/>
	<property name="lib.dir" value="lib"/>
	<property name="config.dir" value="config"/>
	<property name="install.dir" value="install"/>
	<property name="bin.dir" value="bin"/>
	<property name="resource.dir" value="resource"/>
	<property name="classes.dir" value="classes"/>
    <property name="output.dir" value="dest"/>
	<property name="release.dir" value="release"/>
	<property name="jdk.version" value="1.8"/>
	<property name="ant.build.javac.source" value="${jdk.version}"/>
	<property name="ant.build.javac.target" value="${jdk.version}"/>
    <property name="jarname" value="${package.name}-settings.jar"/>
    <property name="mainclass" value="com.arcare.apigw.core.ConfigGenerator"/><!--start point-->
	
    <!-- lib path -->
    <path id="lib-classpath">
        <fileset dir="${lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
    </path>
    <path id="testlib-classpath">
        <fileset dir="${test.lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
    </path>
	
	<target name="clean" description="clean up" >
	    <!-- Delete the output directory trees -->
	    <delete dir="${classes.dir}"/>
		<delete dir="${output.dir}"/>
		<delete dir="${release.dir}"/>
	</target>
	
    <!-- 1.init create output dir -->
    <target name="init" depends="clean">
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${output.dir}"/>
    	<mkdir dir="${release.dir}"/>
    </target>
    <!-- 2.compile -->
    <target name="compile" depends="init">
        <javac srcdir="${src.dir}" destdir="${classes.dir}" includeantruntime="false" encoding="UTF-8">
        	<classpath refid="lib-classpath"/>
        </javac>
    </target>

	<!-- build -->
	<target name="build" depends="compile">
        <copy todir="${output.dir}/${lib.dir}">
            <fileset dir="${lib.dir}"/>
        </copy>
    	<copy todir="${output.dir}/${resource.dir}">
    	    <fileset dir="${resource.dir}"/>
    	</copy>
    	<copy todir="${output.dir}">
    	    <fileset dir="${install.dir}"/>
    	</copy>
    	<copy todir="${output.dir}/${config.dir}">
    		<fileset dir="${config.dir}"/>
    	</copy>
        <!--Create a property containing all .jar files,
        prefix lib/, and seperated with a space-->
        <pathconvert property="mf.classpath" pathsep=" ">
            <mapper>
                <chainedmapper>
                    <!-- jar remove dir -->
                    <flattenmapper/>
                    <!-- add lib/ prefix -->
                    <globmapper from="*" to="lib/*"/>
                </chainedmapper>
            </mapper>
            <path refid="lib-classpath"/>
         </pathconvert>
        <!-- jar output path -->
        <jar destfile="${output.dir}/${jarname}" basedir="${classes.dir}">
            <manifest>
                <attribute name="Main-class" value="${mainclass}"/>
                <attribute name="Class-Path" value="${mf.classpath}"/>
            </manifest>
        </jar>
	</target>
	
    <!-- package -->
    <target name="full_win_x64" depends="build">
    	<copy file="../apigw/build/libs/${war.name}" todir="${output.dir}/resource"/>
    	<copy file="../APPGatewayConfigGenerator/README.md" todir="${output.dir}"/>
    	<copy todir="${output.dir}/${config.dir}">
    		<fileset dir="${config.dir}"/>
    	</copy>
    	<copy file="README.md" todir="${output.dir}"/>
    	<echo file="dest/gwinst.bat" append="false">java -jar ${jarname}</echo>
    	<echo file="dest/runnner.bat" append="false">java -Xms2048m -Xmx2048m -jar ./resource/${war.name}</echo>
    	<echo file="dest/uninstall.bat" append="false">prunsrv //DS//${app.name} ${line.separator}pause</echo>
    	<echo file="dest/install.bat" append="true">xcopy /s/y %cd%\amd64\prunsrv.exe %cd% ${line.separator}</echo>	
    	<echo file="dest/install.bat" append="true">%cd%\prunsrv install ${app.name} --DisplayName="${app.name}" --Install=%cd%\prunsrv.exe --JvmMx=2048M --JvmMs=2048M --Jvm=auto --StartMode=jvm --StopMode=jvm --Classpath=%cd%\resource\${war.name} --StartClass=org.springframework.boot.loader.WarLauncher --StartMethod=main --StopMode=jvm --StopClass=com.arcare.stop.Stop --StopMethod=main --StdOutput=stdout.txt --StdError=stderr.txt ${line.separator}pause</echo>
    	<zip destfile="${release.dir}/${package.name}_prod_x64.zip"
    	     basedir="${output.dir}"
    	     update="true"/>
    	
    </target>
	
    <!-- package -->
    <target name="full_win_x86" depends="build">
    	<copy file="../apigw/build/libs/${war.name}" todir="${output.dir}/resource"/>
    	<copy file="../APPGatewayConfigGenerator/README.md" todir="${output.dir}"/>
    	<copy todir="${output.dir}/${config.dir}">
    		<fileset dir="${config.dir}"/>
    	</copy>
    	<copy file="README.md" todir="${output.dir}"/>
    	<echo file="dest/gwinst.bat" append="false">java -jar ${jarname}</echo>
    	<echo file="dest/runnner.bat" append="false">java -Xms1024m -Xmx1024m -jar ./resource/${war.name}</echo>
    	<echo file="dest/uninstall.bat" append="false">prunsrv //DS//${app.name} ${line.separator}pause</echo>
    	<echo file="dest/install.bat" append="true">%cd%\prunsrv install ${app.name} --DisplayName="${app.name}" --Install=%cd%\prunsrv.exe --JvmMx=1024M --JvmMs=1024M --Jvm=auto --StartMode=jvm --StopMode=jvm --Classpath=%cd%\resource\${war.name} --StartClass=org.springframework.boot.loader.WarLauncher --StartMethod=main --StopMode=jvm --StopClass=com.arcare.stop.Stop --StopMethod=main --StdOutput=stdout.txt --StdError=stderr.txt ${line.separator}pause</echo>
    	<zip destfile="${release.dir}/${package.name}_x86.zip"
    	     basedir="${output.dir}"
    	     update="true"/>
    	
    </target>
	
	<!--package unix-->
    <target name="full_unix_x64" depends="build">
    	<copy file="../apigw/build/libs/${war.name}" todir="${output.dir}/resource"/>
    	<copy file="../APPGatewayConfigGenerator/README.md" todir="${output.dir}"/>
    	<copy file="../APPGateWayConfigGenerator/install/APPGateway.sh" todir="${output.dir}"/>
    	<copy todir="${output.dir}/${config.dir}">
    		<fileset dir="${config.dir}"/>
    	</copy>
    	<copy file="README.md" todir="${output.dir}"/>
    	<echo file="dest/gwinst.sh" append="false">java -jar ${jarname}</echo>
    	<echo file="dest/runnner.sh" append="false">java -Xms2048m -Xmx2048m -jar ./resource/${war.name}</echo>
    	<zip destfile="${release.dir}/${package.name}_unix_x64.zip"
    	     basedir="${output.dir}"
    	     update="true"/>
    	
    </target>
</project>